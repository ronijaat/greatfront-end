import { Dispatch, SetStateAction ,useState } from 'react';

interface UseCounterReturn {
  count: number;
  increment: () => void;
  decrement: () => void;
  reset: () => void;
  setCount: Dispatch<SetStateAction<number>>;
}

export default function useCounter(initialValue?: number): UseCounterReturn {
  const [count,setValue] = useState(initialValue ?? 0);

  const increment=()=> setValue(prev =>prev+1);
  const decrement=()=> setValue(prev =>prev-1);
  const reset=()=> setValue(initialValue ?? 0);
  const setCount = (value: SetStateAction<number>)=>{
    setValue(value)
  }

  return {
    count,
    increment,
    decrement,
    reset,
    setCount
  }
}
